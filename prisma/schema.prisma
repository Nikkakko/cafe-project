// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}




enum Category {
  SUBSCRIPTIONS
  EQUIPMENT
  COFFE
}

enum UserRoles {
  ADMIN
  USER
}



enum SubCategories {
  FILTER_PAPERS
  BREWING_DEVICES
  ACCESSORIES
  GRINDERS
  BEANS
  FILTER_COFFEE
  ESPRESSO
}




enum Purchase {
  ONE_TIME
  SUBSCRIPTION
}

enum Size {
  STANDARD_BOX_12OZ
  BULK_BAG_5LB
  ONE_CUP
  TWO_CUP
  G250
  KG1
}






model Products {
  id        String      @id @default(uuid())
  userId    String
  title      String
  description String
  images   String[]
  slug    String @unique



  salePercent Int

  sizes ProductSize[]
  purchaseType PurchaseType[]


  
  price   Float
  stock  Int

  category  Category @default(COFFE)
  subCategory SubCategories @default(FILTER_PAPERS)

  cartItem CartItem[]
  review   Review[]
  
  
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model CartItem {
  id        String   @id @default(uuid())
  productId String
  quantity  Int
  product   Products @relation(fields: [productId], references: [id])
  cart      Cart     @relation(fields: [cartId], references: [id])
  cartId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Cart {
  id        String   @id @default(uuid())
  userId    String?
  cartItems CartItem[]
  closed   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id        String   @id @default(uuid())
  userId    String
  productId String
  rating    Int
  comment   String
  product   Products @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model ProductSize {
  id        String   @id @default(uuid())
  productId String
  size      Size
  product   Products @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model PurchaseType {
  id        String   @id @default(uuid())
  productId String
  purchase  Purchase
  product   Products @relation(fields: [productId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

